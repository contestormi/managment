# name: Build and Push Docker

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_HUB_USERNAME }}/managment:latest
#     - name: Log in to Docker Hub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKER_HUB_USERNAME }}
#         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#     - name: Push to Docker Hub
#       run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/managment:latest

name: Build, Push Docker and Run E2E Tests

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build docker image
      run: docker build . --file Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest

    - name: Login to YC Registry
      uses: docker/login-action@v3.0.0
      with:
        registry: cr.yandex
        username: json_key
        password: ${{ secrets.YC_KEYS }}

    - name: Push tag to YC Registry
      run: docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Deploy serverless container
      uses: yc-actions/yc-sls-container-deploy@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
        container-name: ${{ secrets.YC_CONTAINER_NAME }}
        folder-id: ${{ secrets.YC_FOLDER_ID }}
        revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest
        revision-service-account-id: ${{ secrets.YC_SA_ID }}
        revision-env: |
          POSTGRES_URL=${{ secrets.ENV_POSTGRES_URL }}
