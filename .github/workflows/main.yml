name: Python application build, test, and deploy

on:
  push:
    branches: [ managment_tests ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Flask SQLAlchemy requests-mock flask_sqlalchemy psycopg2 flask_testing pytest
      - name: Set up PostgreSQL URL
        run: echo "SQLALCHEMY_DATABASE_URI=postgresql://user:password@localhost:5432/testdb" >> $GITHUB_ENV
      - name: Set up PostgreSQL URL
        run: echo "ENV_POSTGRES_MANAGMENT_URL=${{ secrets.ENV_POSTGRES_MANAGMENT_URL }}" >> $GITHUB_ENV
      - name: Run tests with pytest
        run: |
          pytest

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build docker image
      run: docker build . --file Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest

    - name: Login to YC Registry
      uses: docker/login-action@v3.0.0
      with:
        registry: cr.yandex
        username: json_key
        password: ${{ secrets.YC_KEYS }}

    - name: Push tag to YC Registry
      run: docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy serverless container
      uses: yc-actions/yc-sls-container-deploy@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
        container-name: ${{ secrets.YC_CONTAINER_NAME }}
        folder-id: ${{ secrets.YC_FOLDER_ID }}
        revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest
        revision-service-account-id: ${{ secrets.YC_SA_ID }}
        revision-env: |
          ENV_POSTGRES_MANAGMENT_URL=${{ secrets.ENV_POSTGRES_MANAGMENT_URL }}
