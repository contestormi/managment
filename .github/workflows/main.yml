# name: Build, Push Docker and Run E2E Tests

# on:
#   push:
#     branches: [ yandex ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2

#     - name: Build docker image
#       run: docker build . --file Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest

#     - name: Login to YC Registry
#       uses: docker/login-action@v3.0.0
#       with:
#         registry: cr.yandex
#         username: json_key
#         password: ${{ secrets.YC_KEYS }}

#     - name: Push tag to YC Registry
#       run: docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest

#   deploy:
#     needs: [build]
#     runs-on: ubuntu-latest
#     steps:
#     - name: Deploy serverless container
#       uses: yc-actions/yc-sls-container-deploy@v1
#       with:
#         yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
#         container-name: ${{ secrets.YC_CONTAINER_NAME }}
#         folder-id: ${{ secrets.YC_FOLDER_ID }}
#         revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/delivery-service:latest
#         revision-service-account-id: ${{ secrets.YC_SA_ID }}
#         revision-env: |
#           AMQP_URL=${{ secrets.ENV_AMQP_URL }}
#           POSTGRES_URL=${{ secrets.ENV_POSTGRES_URL }}

name: Python application test

on:
  push:
    branches: [ yandex_e2e ]  # Замените 'main' на название вашей ветки, если оно отличается

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Flask SQLAlchemy requests-mock
        # Если у вас есть другие зависимости, добавьте их здесь
    - name: Run tests
      run: |
        python -m unittest discover -s tests
